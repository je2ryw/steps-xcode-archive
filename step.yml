title: Xcode Archive for iOS
summary: |-
  Run Xcode Archive command and export an iOS IPA
description: |-
  Run Xcode Archive command and export an iOS IPA.

  You can share it, upload it, deploy it and catch them
  all! Well, maybe not the last one.
website: https://github.com/bitrise-io/steps-new-xcode-archive
source_code_url: https://github.com/bitrise-io/steps-new-xcode-archive
support_url: https://github.com/bitrise-io/steps-new-xcode-archive/issues
host_os_tags:
  - "osx-10.10"
project_type_tags:
  - ios
type_tags:
  - build
  - xcode
is_requires_admin_user: false
is_always_run: false
is_skippable: false
deps:
  check_only:
  - name: xcode
run_if: ""
inputs:
  - workdir: $BITRISE_SOURCE_DIR
    opts:
      title: "Working directory"
      summary: ""
      description: |
        Working directory of the step.
        You can leave it empty to don't change it.
  - project_path: $BITRISE_PROJECT_PATH
    opts:
      title: "Project (or Workspace) path"
      summary: ""
      description: |
        A `.xcodeproj` or `.xcworkspace` path.
      is_required: true
  - scheme: $BITRISE_SCHEME
    opts:
      title: "Scheme name"
      summary: ""
      description: |
        The Scheme to use.
      is_required: true
  - configuration:
    opts:
      title: "Configuration name"
      summary: ""
      description: |
        (optional) The configuration to use. By default your Scheme
        defines which configuration (Debug, Release, ...) should be used,
        but you can overwrite it with this option.

        **Make sure that the Configuration you specify actually exists
        in your Xcode Project**. If it does not, if you have a typo
        in the value of this input Xcode will simply use the Configuration
        specified by the Scheme and will silently ignore this parameter!
  - output_dir: $BITRISE_DEPLOY_DIR
    opts:
      title: "Output directory path"
      summary: ""
      description: |
        This directory will contain the generated .ipa and .dSYM.zip files.
      is_required: true
  - force_code_sign_identity:
    opts:
      title: "Force code signing with Identity"
      description: |-
        Force xcodebuild to use specified Code Sign Identity.

        Specify code sign identity as full ID (e.g. `iPhone Developer: Bitrise Bot (VV2J4SV8V4)`)
        or specify code sign group ( `iPhone Developer` or `iPhone Distribution` ).

        You also have to **specify the Identity in the format it's stored in Xcode project settings**,
        and **not how it's presented in the Xcode.app GUI**!
        This means that instead of `iOS` (`iOS Distribution/Development`) you have to use
        `iPhone` (`iPhone Distribution` or `iPhone Development`).
        **Capitalization also matters**, `iPhone Distribution` works but `iphone distribution` does not!
  - force_provisioning_profile:
    opts:
      title: "Force code signing with Provisioning Profile"
      description: |-
        Force xcodebuild to use specified Provisioning Profile.

        Use Provisioning Profile's UUID, profile's name is not acceptable by xcodebuild.

        How to get your UUID:

        - In xcode select your project -> Build Settings -> Code Signing
        - Select the desired Provisioning Profile, then scroll down in profile list and click on Other...
        - The popup will show your profile's UUID.

        Format example:

        - c5be4123-1234-4f9d-9843-0d9be985a068
  - export_options_path:
    opts:
      title: "Export options path"
      description: |-
        Used for Xcode version 7 and above.

        Specifies a path to a plist file that configures archive exporting.
        If empty, step generates these options based on provisioning profile,
        with default values.

        Auto generated export options available for export methods:

        - app-store
        - ad-hoc
        - enterprise
        - development

        If step doesn't find export method based on provisioning profile, development will be use.

        Call xcodebuild -help for available export options.
  - is_clean_build: "no"
    opts:
      title: "Do a clean Xcode build before the archive?"
      value_options:
        - "yes"
        - "no"
      is_required: true
  - output_tool: xcpretty
    opts:
      title: Output tool
      description: |-
        If output_tool is set to xcpretty, the xcodebuild output will be prettified by xcpretty.
        If output_tool is set to xcodebuild, the raw xcodebuild output will be printed.
      value_options:
      - xcpretty
      - xcodebuild
      is_required: true
      is_expand: false
  - xcodebuild_options: ""
    opts:
      title: Additional options for xcodebuild call
      description: |-
        Options added to the end of the xcodebuild call.

        You can use multiple options, separated by a space
        character. Example: `-xcconfig PATH -verbose`
  - is_export_xcarchive_zip: "no"
    opts:
      title: Export the generated archive?
      description: |
        If this input is set to `yes`, the generated .xcarchive will be zipped and moved to `output_dir`.
      value_options:
      - "yes"
      - "no"
      is_required: true
  - use_deprecated_export: "no"
    opts:
      title: Use deprecated ipa export method?
      description: |
        If this input is set to `yes`, step will use deprecated ipa export method.
      value_options:
      - "yes"
      - "no"
      is_required: true
  - use_ssh_for_archive: "no"
    opts:
      title: Use a new ssh session for archiving and code signing task?
      description: |
        If this input is set to `yes`, the archiving and code signing tasks will executed via a self-connected ssh session.
        It is a workaround solution for the keychain unlock prompt issue at the code signing step.
      value_options:
      - "yes"
      - "no"
      is_required: false
  - keychain_path: $HOME/Library/Keychains/login.keychain
    opts:
      title: Keychain Path
      is_required: false
  - keychain_password: $BITRISE_KEYCHAIN_PASSWORD
    opts:
      title: Keychain's password
      is_required: false
  - ssh_identity_path: "~/.ssh/vagrant-insecure_private_key"
    opts:
      title: "Identity file path for the ssh session"
      summary: ""
      description: |
        Execute the xcodebuild archive command via a self-connected ssh session.
      is_required: false
outputs:
  - BITRISE_IPA_PATH:
    opts:
      title: The created .ipa file's path
  - BITRISE_APP_DIR_PATH:
    opts:
      title: The generated .app directory
  - BITRISE_DSYM_PATH:
    opts:
      title: The created .dSYM.zip file's path
  - BITRISE_XCARCHIVE_PATH:
    opts:
      title: The created .xcarchive.zip file's path
